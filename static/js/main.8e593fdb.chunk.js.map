{"version":3,"sources":["components/SearchHero/SearchHero.js","services/searchFunction.js","config.js","components/Hero/Hero.js","components/HeroesList/HeroesList.js","components/HeroDetails/Chart.js","components/HeroDetails/HeroDetails.js","services/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["searchHero","props","onSubmit","submit","placeholder","onChange","change","type","value","term","className","searchFunction","a","axios","get","response","data","console","error","hero","onClick","click","style","width","alt","src","name","heroesList","results","map","cursor","Hero","key","id","image","url","passId","Chart","percentage","background","margin","height","label","heroDetails","bioElements","Object","values","bioels","bioKeys","keys","biokeys","statsElements","statels","statsKeys","statkeys","color","close","el","index","ErrorBoundary","state","hasError","info","this","setState","toString","componentStack","children","Component","App","useState","setTerm","setResults","bioView","setBioView","setHero","SearchHero","e","target","preventDefault","then","HeroesList","filtered","find","log","handleClick","HeroDetails","biography","powerstats","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8e593fdb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst searchHero = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.submit}>\n        <input\n          placeholder=\"type your superhero\"\n          onChange={props.change}\n          type=\"search\"\n          value={props.term}\n        />\n        <input\n          className=\"btn btn-md btn-primary\"\n          type=\"submit\"\n          value=\"search\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default searchHero;\n","import { API_Key } from '../config'\nimport axios from 'axios'\n\nexport const searchFunction = async term => {\n    try {\n    const response = await axios.get(`https://www.superheroapi.com/api.php/${API_Key}/search/${term}`);\n    return response.data;\n    } catch (err) {\n    console.error('bład:' + err);\n    }\n}","export const API_Key = '3490981190924693';","import React from \"react\";\n\nconst hero = (props) => {\n  return (\n    <li className=\"list-group-item\" onClick={props.click}>\n      <img\n        style={{ width: \"100px\" }}\n        className=\"rounded float-left\"\n        alt=\"heroImage\"\n        src={props.src}\n      />\n      <div className=\"h-100 d-flex align-items-center justify-content-center\">\n        <h3>{props.name}</h3>\n      </div>\n    </li>\n  );\n};\n\nexport default hero;\n","import React from \"react\";\nimport Hero from \"../Hero/Hero\";\n\nconst heroesList = (props) => {\n  return (\n    <>\n      {(props.results || []).map((hero) => {\n        return (\n          <div className=\"row w-100\">\n            <ul\n              style={{ cursor: \"pointer\" }}\n              className=\"list-group w-100 ml-5 mr-5\"\n            >\n              <Hero\n                key={hero.id}\n                name={hero.name}\n                src={hero.image.url}\n                click={() => props.passId(hero.id)}\n              />\n            </ul>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default heroesList;\n","import React from \"react\";\nimport \"../../index.css\";\n\nconst Chart = (props) => {\n  return (\n    <div className=\"chart-container d-flex justify-content-center\">\n      <div className=\"chart animation\">\n        <p className=\"text-center\">{props.percentage}</p>\n        <div\n          style={{\n            background: \"#363636\",\n            width: \"30px\",\n            margin: \"auto\",\n            height: `${100 - props.percentage}px`,\n          }}\n          className=\"resize\"\n        ></div>\n        <div\n          style={{\n            background: \"gold\",\n            width: \"30px\",\n            height: `${props.percentage}px`,\n            margin: \"auto\",\n          }}\n          className=\"chart-column\"\n        ></div>\n        <h6 className=\"text-center\">{props.label}</h6>\n      </div>\n    </div>\n  );\n};\nexport default Chart;\n","import React from \"react\";\nimport \"../../index.css\";\nimport Chart from \"./Chart\";\n\nconst heroDetails = (props) => {\n  const bioElements = Object.values(props.bioels);\n  const bioKeys = Object.keys(props.biokeys);\n\n  const statsElements = Object.values(props.statels);\n  const statsKeys = Object.keys(props.statkeys);\n  return (\n    <div\n      style={{ color: \"white\" }}\n      className=\"jumbotron fixed-position w-100 media-query-jumbotron\"\n    >\n      <h1 className=\"positioned-x\">\n        <span\n          style={{ cursor: \"pointer\" }}\n          className=\"float-right\"\n          onClick={props.close}\n        >\n          ✘\n        </span>\n      </h1>\n      <p className=\"lead\">\n        <div className=\"d-flex align-items-start justify-content-start flex-col media-query-class\">\n          <img style={{ width: \"30%\" }} src={props.src} alt=\"imageBigHero\" />\n          <div className=\"p-2 container-hero-details\">\n            <h1 className=\"text-center text-danger\">{props.name}</h1>\n            <div className=\"d-flex flex-row\">\n              <h3 className=\"d-flex align-items-center text-warning\">\n                Powers:{\" \"}\n              </h3>\n              {statsElements.map((el, index) => (\n                <div\n                  key={`powers-${el}-${index}`}\n                  className=\"d-flex flex-col align-items-start additional-class\"\n                >\n                  <Chart label={statsKeys[index]} percentage={el} />\n                </div>\n              ))}\n            </div>\n            <div>\n              <h3 className=\"text-warning\">Biography: </h3>\n              {bioElements.map((el, index) => (\n                <h4 key={`bio-${el}${index}`}>\n                  <span>{bioKeys[index]}: </span>\n                  {el}\n                </h4>\n              ))}\n            </div>\n          </div>\n        </div>\n      </p>\n    </div>\n  );\n};\nexport default heroDetails;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      info: null\n    };\n  }\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n      error: error,\n      info: info\n    });\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>Oops, something went wrong :(</h1>\n          <p>The error: {this.state.error.toString()}</p>\n          <p>Where it occured: {this.state.info.componentStack}</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React, { useState } from \"react\";\nimport SearchHero from \"./components/SearchHero/SearchHero\";\nimport { searchFunction } from \"./services/searchFunction\";\nimport HeroesList from \"./components/HeroesList/HeroesList\";\nimport HeroDetails from \"./components/HeroDetails/HeroDetails\";\nimport \"./index.css\";\nimport ErrorBoundary from './services/ErrorBoundary'\n\nfunction App() {\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [bioView, setBioView] = useState(false);\n  const [hero, setHero] = useState(null);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    searchFunction(term).then((data) => {\n      setResults(data.results);\n    });\n  };\n  const handleClick = (id) => {\n    const heroes = [...results];\n    const filtered = heroes.find((hero) => hero.id === id);\n    setHero(filtered);\n    console.log(filtered);\n    setBioView(true);\n  };\n  const handleClose = () => {\n    setBioView(false);\n  };\n\n  return (\n    <>\n                        <ErrorBoundary>\n        <div className=\"mt-3 mb-3 d-flex justify-content-center\">\n            <SearchHero\n              term={term}\n              change={(e) => setTerm(e.target.value)}\n              submit={handleSubmit}\n            />\n        </div>\n      <div className=\"row justify-content-md-center\">\n        <HeroesList\n          className=\"\"\n          results={results}\n          passId={(id) => handleClick(id)}\n          />\n      </div>\n      {bioView === true ? (\n\n        <HeroDetails\n        name={hero.name}\n        bioels={hero.biography}\n        biokeys={hero.biography}\n        statels={hero.powerstats}\n        statkeys={hero.powerstats}\n        src={hero.image.url}\n        close={() => handleClose()}\n        />\n        ) : null}\n        </ErrorBoundary>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}